name: Build and test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          [
            ubuntu-24.04,
            ubuntu-24.04-arm,
            windows-latest,
            macos-13,
            macos-14,
            macos-15,
          ]
        build_type: [Release, Debug]
        c_compiler: [gcc, clang, cl, clang-cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: windows-latest
            c_compiler: clang-cl
            cpp_compiler: clang-cl
            toolset: ClangCL
          - os: ubuntu-24.04
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-24.04
            c_compiler: clang
            cpp_compiler: clang++
          - os: ubuntu-24.04-arm
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-24.04-arm
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-13
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-14
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-15
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-24.04
            c_compiler: cl
          - os: ubuntu-24.04
            c_compiler: clang-cl
          - os: ubuntu-24.04-arm
            c_compiler: cl
          - os: ubuntu-24.04-arm
            c_compiler: clang-cl
          - os: macos-13
            c_compiler: cl
          - os: macos-13
            c_compiler: clang-cl
          - os: macos-13
            c_compiler: gcc
          - os: macos-14
            c_compiler: cl
          - os: macos-14
            c_compiler: clang-cl
          - os: macos-14
            c_compiler: gcc
          - os: macos-15
            c_compiler: cl
          - os: macos-15
            c_compiler: clang-cl
          - os: macos-15
            c_compiler: gcc
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        if: ${{ startsWith(matrix.toolset, 'ClangCL') }}
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -T ${{ matrix.toolset }}
          -S ${{ github.workspace }}

      - name: Configure CMake
        if: ${{ ! startsWith(matrix.toolset, 'ClangCL') }}
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} -j

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }} --output-on-failure -R spud.test
